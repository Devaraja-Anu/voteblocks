// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: votes.sql

package db

import (
	"context"
)

const addVote = `-- name: AddVote :one
INSERT INTO votes (poll_id,option) VALUES ($1,$2)
RETURNING id,poll_id,option,created_at
`

type AddVoteParams struct {
	PollID int32  `json:"poll_id"`
	Option string `json:"option"`
}

func (q *Queries) AddVote(ctx context.Context, arg AddVoteParams) (Vote, error) {
	row := q.db.QueryRow(ctx, addVote, arg.PollID, arg.Option)
	var i Vote
	err := row.Scan(
		&i.ID,
		&i.PollID,
		&i.Option,
		&i.CreatedAt,
	)
	return i, err
}

const getTotalVotesForPoll = `-- name: GetTotalVotesForPoll :one
SELECT count(*) AS total FROM votes WHERE poll_id = $1
`

func (q *Queries) GetTotalVotesForPoll(ctx context.Context, pollID int32) (int64, error) {
	row := q.db.QueryRow(ctx, getTotalVotesForPoll, pollID)
	var total int64
	err := row.Scan(&total)
	return total, err
}
